{
  "comment.typingSpeed": "Milliseconds per word/token for visual typing",
  "comment.clearDelay": "Milliseconds delay after clearing board",
  "comment.autoplayAdvanceDelay": "Delay before auto-advancing to the next submodule AFTER content is ready",
  "comment.setDefaultLanguage": "Set default language to 'hi'",
  "comment.customStyledComponents": "--- Custom Styled Components ---",
  "comment.teacherCharacterSvg": "Teacher character SVG component",
  "comment.teacherCharacterSvgKeep": "Teacher character SVG component (Keep as before)",
  "comment.basicMarkdownFormatter": "Basic markdown formatter",
  "comment.helperFlattenObjectStrings": "Helper function to extract strings from a nested object structure",
  "comment.mainComponent": "Main Component",
  "comment.importCircularProgress": "Import CircularProgress for the loader",
  "comment.importBackdrop": "Import Backdrop for the loader overlay",
  "comment.ensureJsonPath": "Ensure the path to your JSON data is correct",
  "comment.apiEndpoint": "--- API Endpoint ---",
  "comment.constants": "--- Constants ---",
  "comment.customStyledComponentsKeep": "--- Custom Styled Components (Keep as before) ---",
  "comment.helperFunctionsCallback": "--- Helper Functions (useCallback for stability) ---",
  "comment.cleanupAudioUrl": "Clean up the current audio object URL",
  "comment.stopTtsAudio": "Function to stop TTS audio playback",
  "comment.playTtsAudioBase64": "Function to play TTS audio from a base64 string - UPDATED TO MATCH processRecording cleanup",
  "comment.addEventListenersRecording": "--- Add event listeners similar to processRecording ---",
  "comment.cleanupListenerEnded": "Cleanup listener: Revoke URL when playback ends naturally",
  "comment.errorListenerPlayback": "Error listener: Revoke URL on playback error",
  "comment.canplaythroughListenerAutoplay": "Canplaythrough listener to auto-play when ready",
  "comment.animationControlFunctions": "--- Animation Control Functions (defined and assigned to refs) ---",
  "comment.thisEffectTypingLoop": "This effect *is* the typing animation loop.",
  "comment.dependenciesEffect": "Dependencies: The state/ref values that should cause this effect to re-run.",
  "comment.startTypingAnimation": "Starts the overall typing animation process for the current fullContent string.",
  "comment.fetchingCachingLogic": "--- Fetching and Caching Logic (useCallback) ---",
  "comment.functionSelectSubmodule": "Function to select and display a submodule (handles fetching/caching and rendering)",
  "comment.eventHandlersCallback": "--- Event Handlers (useCallback) ---",
  "comment.handleManualNextButton": "Handle manual click of the \"Next\" button displayed on the board",
  "comment.effects": "--- Effects ---",
  "comment.effectPreferredLanguage": "Effect: Read preferred language from localStorage on mount",
  "comment.effectTransitionStartScreen1": "Effect: Triggered when the component transitions from the start screen",
  "comment.effectTransitionStartScreen2": "This handles the *very first* content load in autoplay mode.",
  "comment.effectFullContentChange": "Effect: Triggered when fullContent changes to start a new typing animation.",
  "comment.effectScrollBoardContent": "Effect: Scroll the board content to the bottom as text appears",
  "comment.effectAutoplayPrefetch1": "Effect: Handles autoplay progression and pre-fetching the *next* item.",
  "comment.effectAutoplayPrefetch2": "This effect runs AFTER the current submodule's TYPING animation completes (isSubmoduleComplete).",
  "comment.effectCreateCleanupAudio": "Effect to create and cleanup the Audio elements once on mount",
  "comment.renderJsx": "--- Render JSX ---",

  "console.revokingPreviousAudioUrl": "Revoking previous audio Object URL:",
  "console.stoppingTtsAudio": "Stopping TTS audio playback.",
  "console.noAudioDataProvided": "No audio data provided to playTtsAudioFromBase64.",
  "console.ttsAudioRefNotAvailableFunc": "TTS audio ref is not available during playTtsAudioFromBase64.",
  "console.createdNewAudioUrl": "Created new audio Object URL:",
  "console.ttsAudioEndedCleanup": "TTS audio playback ended. Cleaning up URL.",
  "console.audioEndedSrcChangedCleanup": "Audio ended, but src changed before cleanup:",
  "console.revokedAudioUrlEnded": "Revoked audio URL on ended:",
  "console.revokedAudioUrlEndedSrcChanged": "Revoked audio URL on ended (src changed):",
  "console.ttsAudioError": "TTS audio playback error:",
  "console.revokedAudioUrlError": "Revoked audio URL on error:",
  "console.audioErrorSrcChangedCleanup": "Audio error, but src changed before cleanup:",
  "console.revokedAudioUrlErrorSrcChanged": "Revoked audio URL on error (src changed):",
  "console.ttsAudioPlayableAttempt": "TTS audio playable, attempting to play.",
  "console.ttsAudioPlaybackPrevented": "TTS audio playback prevented (user interaction required?):",
  "console.revokedAudioUrlPlayPrevented": "Revoked audio URL on play prevented:",
  "console.playPreventedSrcChanged": "Play prevented, but src changed:",
  "console.revokedAudioUrlPlayPreventedSrcChanged": "Revoked audio URL on play prevented (src changed):",
  "console.ttsAudioPlayableSrcChanged": "TTS audio playable, but source changed, not playing or revoking via ref.",
  "console.revokingOrphanedUrl": "Revoking orphaned playable URL:",
  "console.ttsAudioRefNotAvailable": "TTS audio ref is not available.",
  "console.revokingAudioUrlRefNull": "Revoking audio URL because ttsAudioRef was null:",
  "console.errorDecodingAudio": "Error decoding or setting audio:",
  "console.stoppingAnimationAudio": "Stopping animation and audio...",
  "console.clearedAnimationTimeout": "Cleared animation timeout:",
  "console.animationStateReset": "Animation state reset.",
  "console.typingEffectTriggered": "Typing Effect Triggered:",
  "console.typingEffectPausedClearing": "Typing Effect: Paused - isClearing is true.",
  "console.typingEffectClearedTimeoutClearing": "Typing Effect: Cleared active timeout due to clearing start.",
  "console.typingEffectAllWordsTyped1": "Typing Effect: All words typed (index ",
  "console.typingEffectAllWordsTyped2": "/) Calling finish handler.",
  "console.typingEffectClearedTimeoutAllWords": "Typing Effect: Cleared active timeout as all words typed.",
  "console.typingEffectNoWords": "Typing Effect: No words to type. Stopping.",
  "console.typingEffectClearedTimeoutNoWords": "Typing Effect: Cleared active timeout as no words.",
  "console.typingEffectSchedulingTimeout1": "Typing Effect: Scheduling timeout to display word ",
  "console.typingEffectSchedulingTimeout2": " (\"",
  "console.typingEffectSchedulingTimeout3": "\") in ",
  "console.typingEffectSchedulingTimeout4": "ms.",
  "console.typingTimeoutCallbackFired1": "--- Typing Timeout Callback Fired for index ",
  "console.typingTimeoutCallbackFired2": ".",
  "console.typingCallbackAbortedClearing": "Typing Callback Aborted: Clearing started during timeout delay.",
  "console.callbackDisplayedWord1": "Callback Displayed word ",
  "console.callbackDisplayedWord2": ". New display content length: ",
  "console.callbackIncrementedIndex1": "Callback incremented wordIndexRef to ",
  "console.callbackIncrementedIndex2": ".",
  "console.callbackRafFired1": "AnimationFrame callback fired. Now at word index ",
  "console.callbackRafFired2": ". IsClearing: ",
  "console.callbackRafAbortedClearing": "AnimationFrame callback aborted: Clearing started.",
  "console.boardFullStartingClear": "Board full after typing word. Starting clear.",
  "console.boardNotFullOrNoMoreWords": "Board not full OR no more words. Next step handled by effect re-run (if index changed) or finish handler.",
  "console.typingTimeoutIdSet": "Typing Timeout ID set:",
  "console.typingEffectCleanup1": "Typing Effect Cleanup for index ",
  "console.typingEffectCleanup2": ". IsClearing: ",
  "console.typingEffectCleanup3": ". Clearing timeout ID: ",
  "console.clearingTimeoutId1": "Clearing timeout ID ",
  "console.clearingTimeoutId2": " for word ",
  "console.useEffectCleanupReturn": "useEffect cleanup return.",
  "console.typeNextWordClearing": "typeNextWordStep called but isClearing is true. Aborting step.",
  "console.typeNextWordAllWords": "typeNextWordStep called but all words typed. Finishing animation.",
  "console.displayedWord1": "Displayed word ",
  "console.displayedWord2": ": \"",
  "console.displayedWord3": "\"",
  "console.schedulingNextTimeout1": "Scheduling timeout for processing word ",
  "console.schedulingNextTimeout2": " (after delay for word ",
  "console.schedulingNextTimeout3": ") in ",
  "console.schedulingNextTimeout4": "ms.",
  "console.timeoutCallbackFiredNext1": "--- Timeout callback fired. Now at word index ",
  "console.timeoutCallbackFiredNext2": ". IsClearing: ",
  "console.timeoutCallbackFiredNext3": ", Total Words: ",
  "console.timeoutCallbackAbortedClearing": "Timeout callback aborted: Clearing started during timeout delay.",
  "console.animationFrameCallbackFiredNext1": "AnimationFrame callback fired. Now at word index ",
  "console.animationFrameCallbackFiredNext2": ". IsClearing: ",
  "console.animationFrameCallbackAbortedClearing": "AnimationFrame callback aborted: Clearing started.",
  "console.decisionPoint1": "Decision Point: isLastWord: ",
  "console.decisionPoint2": ", shouldClear: ",
  "console.decisionPoint3": ", current index: ",
  "console.boardFullContentRemains": "Board full and content remains. Starting clear.",
  "console.boardNotFullContentRemains": "Board not full, content remains. Scheduling next word.",
  "console.allWordsTypedFinishing": "All words typed. Animation finishing.",
  "console.timeoutIdSetNext": "Timeout ID set:",
  "console.startingTypingAnimation": "Starting typing animation process...",
  "console.cacheHit": "Cache hit for ",
  "console.attemptedFetchInvalidSubmodule": "Attempted to fetch data for invalid submodule or missing content:",
  "console.translateApiNotConfigured": "TRANSLATE_API_URL is not configured. Using original content for all languages.",
  "console.makingApiCall1": "Making API call to ",
  "console.makingApiCall2": " for ",
  "console.makingApiCall3": "...",
  "console.apiErrorResponse": "API Error Response:",
  "console.successfullyFetchedData1": "Successfully fetched data for ",
  "console.successfullyFetchedData2": ". Response data structure:",
  "console.translatedJsonKeys": "translatedJson keys:",
  "console.apiResponseMissingKeys": "API response missing expected 'translatedJson' or 'translatedJson.content'. Response:",
  "console.failedFetchTranslation1": "Failed to fetch translation and audio for topic \"",
  "console.failedFetchTranslation2": "\":",
  "console.selectSubmoduleCalled": "selectSubmodule called:",
  "console.selectSubmoduleInvalidKeys": "selectSubmodule received invalid keys:",
  "console.noAudioContentReceived": "No audio content received or playback skipped for this submodule.",
  "console.errorCaughtAfterFetch": "Error caught in selectSubmodule after fetch:",
  "console.manualSubmoduleClick": "Manual submodule click:",
  "console.manualClickIgnoredLoading": "Manual click ignored while loading.",
  "console.startButtonCLicked": "Start Learning button clicked. Transitioning from start screen.",
  "console.continuingToNextModule": "Continuing to next module from dialog...",
  "console.continueCalledNoModules": "continueToNextModule called but no more modules found. Ending autoplay.",
  "console.manualNextButtonClicked": "Manual 'Next' button clicked...",
  "console.manualNextIgnoredLoading": "Manual next ignored while loading.",
  "console.manualNextInvalidModuleKey": "Manual Next: Invalid current module key.",
  "console.manualNextMovingSubmodule1": "Manual Next: Moving to next submodule in module \"",
  "console.manualNextMovingSubmodule2": "\". Index: ",
  "console.manualNextModuleCompleted1": "Manual Next: Module \"",
  "console.manualNextModuleCompleted2": "\" completed manually.",
  "console.manualNextModuleFoundDialog": "Manual Next: Next module found. Showing dialog.",
  "console.manualFinishedLast": "Manually finished last submodule of last module. Course Complete.",
  "console.preferredLanguageLoaded": "Preferred language loaded from localStorage:",
  "console.noPreferredLanguageFound": "No preferred language found in localStorage, using default ''.",
  "console.couldNotAccessLocalStorage": "Could not access localStorage:",
  "console.initialLoadEffectCheck": "Initial Load Effect Check:",
  "console.initialLoadEffectConditionsMet": "Initial Load Effect: Conditions met. Starting first submodule load.",
  "console.initialLoadEffectNoData": "Initial Load Effect: No valid initial module/submodule found in educationData.",
  "console.useEffectFullContentTriggered": "useEffect([fullContent]) triggered:",
  "console.clearedPrevTimeoutFullContent": "Cleared previous animation timeout during fullContent change cleanup.",
  "console.newContentLoadedInit": "New content loaded. Initializing for typing animation:",
  "console.useEffectFullContentCleanup": "useEffect([fullContent]) cleanup.",
  "console.clearedTimeoutCleanupReturn": "Cleared animation timeout in useEffect cleanup return.",
  "console.autoplayPrefetchCheck": "Autoplay/Prefetch effect check:",
  "console.autoplayAudioCheck1": "Autoplay Audio Check: ttsAudioRef.current: ",
  "console.autoplayAudioCheck2": ", Paused: ",
  "console.autoplayAudioCheck3": ", Ended: ",
  "console.autoplayAudioCheck4": ", Src: ",
  "console.autoplayAudioCheck5": ", isAudioFinished: ",
  "console.autoplayConditionsMet": "Autoplay conditions met (Typing Done, Audio Done, Autoplay On). Considering next item...",
  "console.clearedPendingAutoplayTimeoutConditionsNotMet": "Cleared pending autoplay advance timeout (conditions not met).",
  "console.autoplayPrefetchInvalidModuleData": "Autoplay/Prefetch: Invalid current module data during effect.",
  "console.autoplayNextContentCached1": "Autoplay: Next content (",
  "console.autoplayNextContentCached2": ") already cached. Scheduling advance...",
  "console.autoplayAdvancingCached1": "Autoplay: Advancing to cached content (",
  "console.autoplayAdvancingCached2": ").",
  "console.autoplayAdvanceTimeoutSet": "Autoplay advance timeout set:",
  "console.autoplayPrefetchNotCached1": "Autoplay/Prefetch: Next content (",
  "console.autoplayPrefetchNotCached2": ") not cached. Triggering fetch...",
  "console.autoplayPrefetchFetchComplete1": "Autoplay/Prefetch: Fetch complete for ",
  "console.autoplayPrefetchFetchComplete2": ". Data is now cached. Scheduling advance...",
  "console.autoplayAdvancingFetched1": "Autoplay: Advancing to fetched and cached content (",
  "console.autoplayAdvancingFetched2": ").",
  "console.autoplayAdvanceTimeoutSetAfterFetch": "Autoplay advance timeout set after fetch:",
  "console.autoplayPrefetchFailed1": "Autoplay/Prefetch: Failed to pre-fetch content for ",
  "console.autoplayPrefetchFailed2": ":",
  "console.autoplayAllModulesCompleted": "Autoplay: All modules completed. Showing final dialog.",
  "console.autoplayPrefetchEffectCleanup": "Autoplay/Prefetch effect cleanup.",
  "console.clearedPendingAutoplayTimeoutCleanup": "Cleared pending autoplay advance timeout during cleanup.",
  "console.creatingAudioElements": "Creating audio elements...",
  "console.audioElementsCleanup": "Audio elements cleanup on unmount.",
  "console.finalRevokeOnUnmount": "Final revoke on unmount in audio elements effect cleanup.",

  "ui.title.learningAdventure": "Learning Adventure",
  "ui.css.checkmark": "✓",
  "ui.title.interactiveClassroom": "Interactive Classroom",
  "ui.alt.classroomIllustration": "Classroom illustration",
  "ui.startScreen.title": "Welcome to your Learning Adventure!",
  "ui.startScreen.body": "Get ready for an exciting journey through knowledge! Our friendly teacher will guide you through each lesson step by step.",
  "ui.startScreen.bodyTranslationHint": " (Content will be translated to ",
  "ui.startScreen.currentLanguageLabel": "Currently selected language: ",
  "ui.startScreen.startButton": "Start Learning",
  "ui.board.loading": "Loading...",
  "ui.board.typingIndicator": "Typing...",
  "ui.board.clearingIndicator": "Clearing Board...",
  "ui.board.errorHeader": "Error",
  "ui.board.manualNextButton": "Next",
  "ui.board.initialPrompt": "Select a topic from the course index to begin your adventure!",

  "error.dataNotFound1": "Error: Could not find content data for Module ",
  "error.dataNotFound2": " - Topic ",
  "error.dataNotFound3": ".",
  "error.dataErrorFallback": "Data Error",
  "error.apiRequestFailed1": "API request failed (",
  "error.apiRequestFailed2": "): ",
  "error.apiRequestFailed3": "...",
  "error.loadingContentFailed1": "Error loading content for topic \"",
  "error.loadingContentFailed2": "\". ",
  "error.loadingContentFallback": "Error Loading Content",
  "error.invalidModuleTopicSelected": "Error: Invalid module or topic selected.",
  "error.contentNotAvailable": "Content not available.",
  "error.initialLoadFailed": "Error: Could not load initial learning content. Course data might be empty or malformed.",
  "error.initializationErrorFallback": "Initialization Error",
  "error.manualNextInvalidModule": "Manual Next: Invalid current module key.",
  "error.autoplayPrefetchDataNotFound": "Autoplay/Prefetch: Data for next submodule not found.",

  "dialog.moduleComplete.title": "Module Complete!",
  "dialog.courseComplete.title": "Course Complete!",
  "dialog.moduleComplete.body": "Great job! You have finished all topics in this module.",
  "dialog.moduleComplete.nextModulePrompt1": "Ready to start Module ",
  "dialog.moduleComplete.nextModulePrompt2": ":",
  "dialog.moduleComplete.unknownModuleName": "Unknown Module",
  "dialog.courseComplete.body": "You've finished the entire course! Congratulations!",
  "dialog.button.continueToNextModule": "Continue to Next Module",
  "dialog.button.finish": "Finish",
  "loadingMessageUnique": "Your learning is on its way...",

   "data.submoduleNames": {
    "module 1": {
      "name": "What is Mediation? Understanding the Basics",
      "submoduleNames": [
        "Definition and Concept",
        "Mediation vs. Other Dispute Resolution Methods",
        "Importance of Mediation in Everyday Life",
        "Constitutional Backing of Mediation",
        "Mediation Act, 2023 - Simplified Overview"
      ]
    },
    "module 2": {
      "name": "Why Mediation is Important: The Constitutional and Social Perspective",
      "submoduleNames": [
        "Access to Justice for All",
        "Reducing Burden on Courts",
        "Strengthening Democratic Values",
        "Social and Cultural Relevance",
        "Legal Recognition under Mediation Act, 2023"
      ]
    },
    "module 3": {
      "name": "Types of Disputes You Can Mediate",
      "submoduleNames": [
        "Introduction to Mediable Disputes",
        "Common Disputes Suitable for Mediation",
        "Pre-Litigation Mediation Cases",
        "Disputes Not Allowed Under Mediation",
        "Why Knowing the Scope of Mediation Matters"
      ]
    },
    "module 4": {
      "name": "The Step-by-Step Mediation Process",
      "submoduleNames": [
        "Introduction to the Mediation Process",
        "Step 1: Initiating Mediation",
        "Step 2: Appointment of Mediator",
        "Step 3: Initial Session and Setting the Ground Rules",
        "Step 4: Joint and Private Sessions",
        "Step 5: Reaching a Settlement Agreement",
        "Step 6: Completion and Legal Validity",
        "Benefits of the Process"
      ]
    },
    "module 5": {
      "name": "Role and Responsibilities of the Mediator",
      "submoduleNames": [
        "Who is a Mediator?",
        "Qualifications and Registration",
        "Key Responsibilities of a Mediator",
        "Ethical Conduct and Code of Conduct",
        "Limitations of Mediator's Role"
      ]
    },
    "module 6": {
      "name": "Rights and Duties of Parties in Mediation",
      "submoduleNames": [
        "Right to Voluntary Participation",
        "Right to be Heard and Equal Opportunity",
        "Right to Confidentiality",
        "Duty to Participate in Good Faith",
        "Right to Legal Advice",
        "Duty to Respect the Process and Mediator",
        "Right to Withdraw"
      ]
    },
    "module 7": {
      "name": "Settlement Agreements in Mediation",
      "submoduleNames": [
        "What is a Settlement Agreement?",
        "Key Features of a Settlement Agreement",
        "Legal Enforceability of Settlement Agreements",
        "Filing Settlement Agreement in Court",
        "Benefits of Settlement Agreements",
        "Revocation or Variation of Settlement Agreements",
        "What if the Settlement is Not Honored?"
      ]
    },
    "module 8": {
      "name": "Confidentiality and Privilege in Mediation",
      "submoduleNames": [
        "What is Confidentiality in Mediation?",
        "Why is Confidentiality Important?",
        "Legal Protection of Confidentiality under the Mediation Act, 2023",
        "What is Privilege in Mediation?",
        "Scope and Limits of Privilege",
        "Constitutional Values Supporting Confidentiality and Privilege",
        "How Confidentiality Affects the Mediation Process"
      ]
    },
    "module 9": {
      "name": "Impact of the 2023 Mediation Act on Indian Legal System and Society",
      "submoduleNames": [
        "Introduction to the 2023 Mediation Act",
        "Reducing Burden on Courts",
        "Encouraging Early and Amicable Resolution",
        "Legal Recognition and Enforceability",
        "Improving Access to Justice",
        "Promoting Social Harmony and Constitutional Values",
        "Challenges and Future Directions"
      ]
    },
    "module 10": {
      "name": "How to Access Mediation Services in India",
      "submoduleNames": [
        "Understanding Mediation Service Providers",
        "Finding a Registered Mediator",
        "Starting Mediation Pre-Litigation",
        "Court-Annexed and Court-Ordered Mediation",
        "Costs and Fees for Mediation",
        "Role of Legal Counsel in Mediation",
        "Using Online Mediation Platforms",
        "Steps to Take if Mediation Fails"
      ]
    }
  }
}